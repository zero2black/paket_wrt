name: T2 Build custom 

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      # namapaket1:
    #    description: "namapaket1"
     #   required: false
    #    default: "luci-app-"
    #    type: text
      namapaket:
        description: "namapaket"
        required: false
        default: "luci-app-netmonitor"
        type: choice
        options:
          - luci-app-tinyfilemanager
          - luci-app-netmonitor
          - luci-app-adguardhome
          - autocore
          - autocore-x86
          
        
jobs:
  build:
    name: build ${{ matrix.arch }}-${{ matrix.sdk }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk:
          - 23.05.3
          - snapshot
        arch:
          #- aarch64_cortex-a53
          - x86_64

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Build
        uses: sbwml/openwrt-gh-action-sdk@helloworld
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: packages_ci
          PACKAGES: ${{ github.event.inputs.namapaket }}
          NO_REFRESH_CHECK: true
         

      - name: Store packages
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.arch }}-${{ matrix.sdk }}
          # path: bin/packages/${{ matrix.arch }}/packages_ci/*.ipk
          path: bin/packages/${{ matrix.arch }}/packages_ci

      - name: Zip packages
        run: |
          #zip -j ${{ matrix.arch }}-${{ matrix.sdk }}.zip bin/packages/${{ matrix.arch }}/packages_ci/*.ipk
          #echo -e "**文件说明** 🎈:\n" >> release.txt
          #echo -e "1. 默认ssr与passwall的插件与依赖整合包\n" >> release.txt
          #echo -e "2. 使用方法：将整合包上传到openwrt设备的tmp目录，输入命令 \`opkg install *.ipk\`\n" >> release.txt
          #echo -e "3. 默认压缩包里包含ssr passwall bypass passwall2 插件\n" >> release.txt
          echo -e "testing" >> release.txt
          
      - name: Upload packages
        uses: ncipollo/release-action@main
        with:
          token: ${{ secrets.REALESES_TOKEN }}
          artifacts: "bin/packages/${{ matrix.arch }}/packages_ci/*.ipk"
          #artifacts: "${{ matrix.arch }}-${{ matrix.sdk }}.zip,bin/packages/${{ matrix.arch }}/packages_ci/*.ipk"
          allowUpdates: true
          replacesArtifacts: true
          bodyFile: "release.txt"
          tag: ${{ matrix.arch }}-ipk
                    
      - name: Upload packages apk
        uses: ncipollo/release-action@main
        with:
          token: ${{ secrets.REALESES_TOKEN }}
          artifacts: "bin/packages/${{ matrix.arch }}/packages_ci/*.apk"
          #artifacts: "${{ matrix.arch }}-${{ matrix.sdk }}.zip,bin/packages/${{ matrix.arch }}/packages_ci/*.ipk"
          allowUpdates: true
          replacesArtifacts: true
          bodyFile: "release.txt"
          tag: ${{ matrix.arch }}-apk

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 0
    
      #- name: Remove old Releases
       # uses: dev-drprasad/delete-older-releases@master
       # with:
       #   keep_latest: 60
      #    delete_tags: true
      #  env:
      #     GITHUB_TOKEN: ${{ secrets.REALESES_TOKEN }}
