name: Build tinyfm

on:
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        description: Select OpenWrt Branch.
        required: true
        default: 23.05.0-rc3
        options:  
        - 22.03.3
        - 23.05.0-rc3
        - snapshot
      
jobs:
  build:
    name: Build ${{ matrix.arch }}-${{ matrix.sdk }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
         # - aarch64_cortex-a53
         # - aarch64_cortex-a72
         # - aarch64_generic
          #- arm_arm1176jzf-s_vfp
         # - arm_arm926ej-s
        #  - arm_cortex-a15_neon-vfpv4
       #   - arm_cortex-a5_vfpv4
      #    - arm_cortex-a7
        #  - arm_cortex-a7_neon-vfpv4
        #  - arm_cortex-a8_vfpv3
        #  - arm_cortex-a9
         # - arm_cortex-a9_neon
        #  - arm_cortex-a9_vfpv3-d16
          #- arm_fa526
        #  - arm_mpcore
         # - arm_xscale
        #  - i386_pentium-mmx
        #  - i386_pentium4
         # - mips64_octeonplus
        #  - mips_24kc
         # - mips_4kec
         # - mips_mips32
         # - mipsel_24kc
         # - mipsel_24kc_24kf
        #  - mipsel_74kc
         # - mipsel_mips32
          - x86_64
        sdk:
          #- openwrt-21.02
         # - openwrt-23.05
          - openwrt-22.03

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Environment Variables
        run: |
          export TZ=Asia/Jakarta
          echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
          echo "DATETIME=$(date +'%Y-%m-%d_%H%M%S')" >> $GITHUB_ENV
          
      - name: Build
        uses: sbwml/openwrt-gh-action-sdk@go1.21
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: packages_ci
          PACKAGES: luci-app-tinyfilemanager
          NO_REFRESH_CHECK: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.arch }}-${{ matrix.sdk }}
          path: bin/packages/${{ matrix.arch }}/packages_ci/*.ipk

      - name: Create compress files
        run: |
          tar -zcvf ${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz -C bin/packages/${{ matrix.arch }}/ packages_ci

    #  - name: Upload packages
    #    uses: ncipollo/release-action@v1
    #    with:
    #      name: ${{ github.ref_name }}
    #      token: ${{ secrets.GITHUB_TOKEN }}
    #      tag: release
    #      allowUpdates: true
    #      replacesArtifacts: true
    #      artifacts: "${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz"

      - name: Upload Firmware to Release
   #     if: github.event.inputs.release == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: bin/packages/${{ matrix.arch }}/packages_ci/*.ipk
          #file: ${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz
          #asset_name: ${{ github.event.repository.name }}-${{ github.sha }}
          tag: release-${{ env.DATE }}
          overwrite: true
